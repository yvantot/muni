/* ONLY WHITE THEME BECAUSE IT NEEDS TO BE NOTICEABLE */
/* 	When doing CSS in content script, always remember:
	- Start with a clean state with: "all: initial", attached in your :host or &, but it's not 100% solution, it still inherit some shit for unknown reasons on some sites
	- Avoid using rem, or measurements that depends on root elements, instead use em
	- Beware of CSS inheritance, your font should always be in unique name.
	- Don't take unnecessary width that may disrupt user's experience
	- Use custom elements. It's the only solution for CSS inheritance.
*/

*,
*::before,
*::after {
	box-sizing: border-box;
	margin: 0;
	outline: none;
	border: none;
	background: none;
	padding: 0;
	line-height: 1.7;
	color: var(--main-text-color);
	font-family: Muni-Montserrat, Arial, Helvetica, sans-serif;
	font-size: 16px;
	transform: none;
	font-weight: normal;
	font-style: normal;
}
:host {
	all: initial;
	display: flex;
	position: fixed;
	top: 10px;
	right: 50%;
	justify-content: center;
	transform: translateX(50%);
	z-index: 9999999;
	width: fit-content;
	min-height: 35vh;
	--border-color: hsla(0, 0%, 50%, 0.4);
	--main-text-color: hsl(0, 0%, 10%);
}
button,
svg {
	cursor: pointer;
}
.card-flashcard {
	display: flex;
	position: relative;
	flex-direction: column;
	align-content: space-around;
	border-radius: 1em;
	box-shadow: 0px 3px 10px hsla(0, 0%, 0%, 0.8);
	background: hsl(0, 0%, 95%);
	width: 30vw;
	overflow: hidden;
	color: light-dark(hsl(0, 0%, 10%), hsl(0, 0%, 90%));
	.edit-button {
		margin-top: 1rem;
	}
	.info-container {
		display: flex;
		justify-content: space-between;
		align-items: center;
		border-bottom: 1px solid var(--border-color);
		padding: 0.5em 1em;
		svg {
			width: 1.3rem;
			height: 1.3rem;
		}
	}
	.card-toolbar {
		button {
			opacity: 0.5;
		}
		button:hover {
			opacity: 1;
		}
	}
	.card-info {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		gap: 1rem;
		cursor: pointer;
		padding: 1.5rem 2rem;
		min-height: 200px;
		p {
			font-size: 1.2em;
			user-select: none;
		}
		.keyword {
			font-size: 0.9rem;
			opacity: 0.5;
		}
		.hint {
			color: hsl(224, 40%, 60%);
			font-size: 1.2em;
		}
	}
	.card-flashcard-action {
		display: flex;
		user-select: none;
		button {
			display: flex;
			justify-content: center;
			opacity: 0.5;
			border-top: 1px solid var(--border-color);
			padding: 0.7em;
			width: 100%;
		}
		button:hover {
			opacity: 1;
			background: hsla(0, 0%, 70%, 0.5);
		}
		button:first-child {
			border-bottom-left-radius: 1em;
		}
		button:last-child {
			border-bottom-right-radius: 1em;
		}
	}
}
.session-card-edit {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: space-between;
	padding: 1em;

	.info-container {
		border-bottom: none;

		.card-delete {
			display: none;
		}
	}

	.question-info {
		display: none !important;
	}

	.card-edit {
		display: grid;
		grid-template-columns: repeat(1, 1fr);
		gap: 1em;
		padding: 0 2em;
		width: 100%;

		p {
			color: hsl(0, 0%, 40%);
			background-color: hsl(0, 0%, 80%);
			border-bottom: 2px solid hsl(0, 0%, 60%);
			padding: 0.2em;
			border-radius: 0.3rem;
		}
	}
}
.no-display {
	display: none;
}
